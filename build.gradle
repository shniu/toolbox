buildscript {
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
    }
    dependencies {
        // classpath("io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE")
        // classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        // classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17")
        // classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0")
    }
}
//
//plugins {
//    id 'java'
//}

allprojects {
    apply plugin: 'java'
    apply plugin: "groovy"
    // apply plugin: "org.springframework.boot"
    // apply plugin: "io.spring.dependency-management"
    // apply plugin: "com.gorylenko.gradle-git-properties"

    group 'io.github.shniu'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:unchecked"
        options.compilerArgs << "-Xlint:deprecation"
    }

    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        jcenter()
        mavenCentral()
        maven { url "http://repo.maven.apache.org/maven2" }
    }

    ext {
        guavaVersion = '27.1-jre'

        lombokVersion = '1.18.6'

        mysqlVersion = '8.0.15'
        mybatisStarterVersion = '2.0.0'
        mybatisPlusVersion = '3.1.1'

        httpClientVersion = '4.5.8'

        junitVersion = '5.5.2'
        junitPlatformVersion = '1.5.2'
        hamcrestVersion = '2.1'
        assertJVersion = '3.13.2'
        mockitoVersion = '3.1.0'

        xxlJobVersion = '2.2.0'
    }

    dependencies {
        // compile('org.springframework.cloud:spring-cloud-starter-openfeign')
        
        implementation("com.google.guava:guava:$guavaVersion")

        // implementation("org.springframework.boot:spring-boot-starter")
        // implementation("org.springframework.boot:spring-boot-starter-web")

        compileOnly("org.projectlombok:lombok:$lombokVersion")
        annotationProcessor("org.projectlombok:lombok:$lombokVersion")
        testCompileOnly("org.projectlombok:lombok:$lombokVersion")
        testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")

        testImplementation("org.junit.platform:junit-platform-commons:$junitPlatformVersion")
        testImplementation("org.junit.platform:junit-platform-launcher:$junitPlatformVersion")
        testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
        testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
        testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
        testImplementation("org.assertj:assertj-core:$assertJVersion")
        testImplementation("org.mockito:mockito-core:$mockitoVersion")
    }

    test {
        useJUnitPlatform()
    }

    apply from: "$rootDir/gradle/config/scripts/checkStyle.gradle"

    style.excludePackages = [
    ]

    style.excludeClasses = [
    ]
}


allprojects {
    apply plugin: 'idea'
}
apply from: "$rootDir/gradle/config/scripts/idea.gradle"
